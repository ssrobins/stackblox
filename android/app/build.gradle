apply plugin: 'com.android.application'

android {
    compileSdkVersion ${android_sdk_version}
    defaultConfig {
        applicationId "com.${company}.${target_name}"
        minSdkVersion ${android_min_sdk_version}
        targetSdkVersion ${android_sdk_version}
        versionCode ${version_code}
        versionName "${PROJECT_VERSION}"

        ndk {
            //abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"

            // Limiting to a smaller set of ABIs to save time while testing:
            abiFilters "${ANDROID_ABI}"
        }

        applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "${target_name}_${PROJECT_VERSION}_Android_${ANDROID_ABI}.apk"
            }
        }
    }

    lintOptions {
        // Work around false positive linter error:
        // Error: MainActivity must extend android.app.Activity [Instantiatable]
        disable "Instantiatable"
    }

    signingConfigs {
        release {
            storeFile file(ANDROID_KEY_STORE_PATH)
            storePassword ANDROID_KEY_STORE_PASSWORD
            keyAlias ANDROID_KEY_ALIAS
            keyPassword ANDROID_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    def buildConfig = ""
    if(gradle.startParameter.taskNames.toString().contains("Debug")) {
        buildConfig = "Debug"
    } else {
        buildConfig = "Release"
    }

    task cmake(type:Exec) {
        workingDir '${CMAKE_SOURCE_DIR}'
        commandLine '${CMAKE_COMMAND}', '--build', '${CMAKE_BINARY_DIR}', '--target', '${target_name}', '--config', "$buildConfig", '--verbose'
    }
}

preBuild.dependsOn cmake

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
